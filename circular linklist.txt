#include<stdio.h>
#include<stdlib.h>
struct node{
	int data;
	struct node *next;
};
struct node *tail,*temp,*newnode;
void create()
{

	int choice=1;
	tail=0;
	while(choice)
	{
		newnode=(struct node*)malloc(sizeof(struct node));
		printf("enter the data");
		scanf("%d",&newnode->data);
		newnode->next=0;
		if(tail==0)
		{
			tail=newnode;
			tail->next=newnode;
		}
		else
		{
			newnode->next=tail->next;
			tail->next=newnode;
			tail=newnode;
		}
		printf("enter 1 to continew 0 to quit");
		scanf("%d",&choice);
	}
}
void display()
{
		temp=tail->next;
		while(temp->next!=tail->next)
		{
			printf("%d\t",temp->data);
			temp=temp->next;
		}
		printf("%d",temp->data);
}
void insert_at_beginning()
{
	newnode=(struct node*)malloc(sizeof(struct node));
	printf("enter the data");
	scanf("%d",&newnode->data);
	newnode->next=0;
	if(tail==0)
		{
			tail=newnode;
			tail->next=newnode;
		}
		else
		{
			newnode->next=tail->next;
			tail->next=newnode;
		}
}
void insert_at_end()
{
	newnode=(struct node*)malloc(sizeof(struct node));
	printf("enter the data");
	scanf("%d",&newnode->data);
	newnode->next=0;
	if(tail==0)
		{
			tail=newnode;
			tail->next=newnode;
		}
		else
		{
			newnode->next=tail->next;
			tail->next=newnode;
			tail=newnode;
		}	
}
void insert_at_specific_position()
{
	int pos,i=1,l;
	printf("enter the position to insert");
	scanf("%d",&pos);
	newnode=(struct node*)malloc(sizeof(struct node));
	printf("enter the data");
	scanf("%d",&newnode->data);
	newnode->next=0;
	temp=tail->next;
	while(i<pos-1)
	{
		temp=temp->next;
		i++;
	}
	newnode->next=temp->next;
	temp->next=newnode;
	temp=newnode;
}
void delete_at_beginning()
{
	temp=tail->next;
	tail->next=temp->next;
	free(temp);
}
void delete_at_end()
{
	struct node *current ,*previous;
	current=tail->next;
	while(current->next!=tail->next)
	{
		previous=current;
		current=current->next;
	}
	previous->next=tail->next;
	tail=previous;
	free(current);
}
void delete_at_specific_position()
{
	struct node *temp2;
	int i=1,pos;
	printf("enter the positon");
	scanf("%d",&pos);
	temp=tail->next;
	while(i<pos-1)
	{
		temp=temp->next;
		i++;
	}
	temp2=temp->next;
	temp->next=temp2->next;
	free(temp2);
}
void search()
{
	int x,i=1;
	printf("enter the value to search");
	scanf("%d",&x);
	temp=tail->next;
	while(temp!=tail->next)
	{
		
		if(x==temp->data)
		{
			printf("the value %d is in the position %d",x,i);
			break;
		}
		i+=1;
		temp=temp->next;
	}
}
int main()
{
	int choice;
    while (choice != 10)
    {
        printf("\npress 1 to create\npress 2 to insert at beginning\npress 3 to insert at end\npress 4 to insert at specific position\npress 5 to display\npress 6 to delete at beginning\npress 7 to delete at last\npress 8 to delete at specific positiom\npress 9 to search\npress 10 to quit\n");
        scanf("%d", &choice);
        switch (choice)
        {
        case 1:
            create();
            break;
        case 2:
            insert_at_beginning();
            break;
        case 3:
            insert_at_end();
            break;
        case 4:
            insert_at_specific_position();
            break;
        case 5:
            display();
            break;
        case 6:
            delete_at_beginning();
            break;
        case 7:
            delete_at_end();
            break;
        case 8:
            delete_at_specific_position();
            break;
        case 9:
        	search();
        	break;
        case 10:
            return choice = 0;
            break;
        default:
            printf("invalid input");
            break;
        }
    }
}